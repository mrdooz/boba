package protocol.common;

message Color4
{
  optional uint32 r = 1 [default = 0];
  optional uint32 g = 2 [default = 0];
  optional uint32 b = 3 [default = 0];
  optional uint32 a = 4 [default = 255];
}

message Vector2
{
  optional float x = 1;
  optional float y = 2;
}

message Vector3
{
  optional float x = 1;
  optional float y = 2;
  optional float z = 3;
}

message Vector4
{
  optional float x = 1;
  optional float y = 2;
  optional float z = 3;
  optional float w = 4;
}

message Matrix3x3
{
  optional Vector3 row_1 = 1;
  optional Vector3 row_2 = 2;

  optional Vector3 row_3 = 3;
}

message Matrix4x4
{
  optional Vector4 row_1 = 1;
  optional Vector4 row_2 = 2;
  optional Vector4 row_3 = 3;
  optional Vector4 row_4 = 4;
}

message FloatKey
{
  optional int64 time = 1;
  optional float value = 2;
}

message FloatKeyframe
{
  optional FloatKey key = 1;

  // bezier control points
  optional FloatKey cp_in = 2;
  optional FloatKey cp_out = 3;
}

// animation type

message AnimHeader
{
  enum AnimType {
    LINEAR = 0;
    BEZIER = 1;
    CATMULL_ROM = 2;
  }
  
  enum LoopType {
    CLAMP = 0;
    LOOP = 1;
    // meh, i'll probably not implement this..
    LOOP_SMOOTH = 2;
  }
  
  optional AnimType type = 1 [default = CATMULL_ROM];
  optional LoopType loop = 2 [default = LOOP];
}

message FloatAnim
{
  optional AnimHeader header = 1;
  repeated FloatKeyframe keyframe = 2;
}

//message Vector3Keyframe
//{
//  option (common.protocol.context) = "void* context";
//  optional int32 time = 1;
//  optional Vector3 value = 2;
//}

//message Vector3Anim
//{
//  optional uint32 type = 1;
//  repeated Vector3Keyframe keyframe = 2;
//}
