#pragma once

{% for dep in dependencies %}
#include "{{ dep }}_types.hpp"
{% endfor %}

namespace {{ namespace }}
{
  {% for class in all_classes %}
  struct {{ class }};
  {% endfor %}
    
  {% for class in classes %}
  struct {{ class.name }}
  {
    {% for enum in class.enums %}
    enum class {{ enum.name }}
    {
    {% for value in enum.vals %}
      {{ value.name }} = {{ value.number }},
    {% endfor %}
    };
    {% endfor %}

    {% for flag in class.flags %}
    struct {{ flag.name }}FlagsF {
      enum Enum { {% for val in flag.vals %}{{ val.name }} = 1 << {{ val.value }}, {% endfor %}};
      struct Bits { {% for val in flag.vals %}u32 {{ val.name }} : 1; {% endfor %}};
    };
    typedef Flags<{{ flag.name }}FlagsF> {{ flag.name }}Flags;
    {% endfor %}
    {% for member in class.members %}
    {% if member.default_value %}
    {{ member.type }} {{ member.name }} = {{ member.default_value }};
    {% else %}
    {{ member.type }} {{ member.name }};
    {% endif %}
    {% endfor %}
  };

  {% endfor %}  
}
