#pragma once
#include "common.pb.h"
#include "effect_settings.pb.h"
#include "effect_settings_plexus.pb.h"

namespace editor
{
{% for class in all_classes %}
struct {{ class }};
{%- endfor %}
{% for class in classes %}
struct {{ class.name }}
{
{%- for enum in class.enums %}
  enum class {{ enum.name }}
  {
  {%- for value in enum.vals %}
    {{ value.name }} = {{ value.number }},
  {%- endfor %}
  };
{% endfor %}

{%- for member in class.members %}
  {{ member.type }} {{ member.name }};
{%- endfor %}
};

inline {{ class.name }} FromProtocol(const {{ class.proto_type}}& p)
{
	{{ class.name }} res;
{%- for member in class.members %}
{%- if member.is_native %}
  res.{{ member.name }} = p.{{ member.name }}();
{%- else %}
{%- if member.is_repeated %}
  res.{{ member.name }} = FromProtocolRepeated<{{ member.type }}>(p.{{ member.name }}());
{%- else %}
  res.{{ member.name }} = FromProtocol(p.{{ member.name }}());
{%- endif %}

  res.{{ member.name }} = FromProtocol(p.{{ member.name }}());
{%- endif %}
{%- endfor %}
	return res;
}
{% endfor %}	
}

