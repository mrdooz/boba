// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: effect_settings_particle.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "effect_settings_particle.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protocol {
namespace effect {
namespace particle {

namespace {

const ::google::protobuf::Descriptor* ParticleConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ParticleConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_effect_5fsettings_5fparticle_2eproto() {
  protobuf_AddDesc_effect_5fsettings_5fparticle_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "effect_settings_particle.proto");
  GOOGLE_CHECK(file != NULL);
  ParticleConfig_descriptor_ = file->message_type(0);
  static const int ParticleConfig_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParticleConfig, num_particles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParticleConfig, bb_col3f_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParticleConfig, bb_col4f_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParticleConfig, bb_dir3f_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParticleConfig, cc_),
  };
  ParticleConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ParticleConfig_descriptor_,
      ParticleConfig::default_instance_,
      ParticleConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParticleConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParticleConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ParticleConfig));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_effect_5fsettings_5fparticle_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ParticleConfig_descriptor_, &ParticleConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_effect_5fsettings_5fparticle_2eproto() {
  delete ParticleConfig::default_instance_;
  delete ParticleConfig_reflection_;
}

void protobuf_AddDesc_effect_5fsettings_5fparticle_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::anttweak::protobuf_AddDesc_anttweak_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036effect_settings_particle.proto\022\030protoc"
    "ol.effect.particle\032\016anttweak.proto\"\201\001\n\016P"
    "articleConfig\022\025\n\rnum_particles\030\001 \001(\r\022\026\n\010"
    "bb_col3f\030\003 \003(\002B\004\200\265\030\001\022\026\n\010bb_col4f\030\004 \003(\002B\004"
    "\210\265\030\001\022\026\n\010bb_dir3f\030\005 \003(\002B\004\220\265\030\001\022\n\n\002cc\030\006 \001(\010"
    ":\004\360\266\030\001", 206);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "effect_settings_particle.proto", &protobuf_RegisterTypes);
  ParticleConfig::default_instance_ = new ParticleConfig();
  ParticleConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_effect_5fsettings_5fparticle_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_effect_5fsettings_5fparticle_2eproto {
  StaticDescriptorInitializer_effect_5fsettings_5fparticle_2eproto() {
    protobuf_AddDesc_effect_5fsettings_5fparticle_2eproto();
  }
} static_descriptor_initializer_effect_5fsettings_5fparticle_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ParticleConfig::kNumParticlesFieldNumber;
const int ParticleConfig::kBbCol3FFieldNumber;
const int ParticleConfig::kBbCol4FFieldNumber;
const int ParticleConfig::kBbDir3FFieldNumber;
const int ParticleConfig::kCcFieldNumber;
#endif  // !_MSC_VER

ParticleConfig::ParticleConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.effect.particle.ParticleConfig)
}

void ParticleConfig::InitAsDefaultInstance() {
}

ParticleConfig::ParticleConfig(const ParticleConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.effect.particle.ParticleConfig)
}

void ParticleConfig::SharedCtor() {
  _cached_size_ = 0;
  num_particles_ = 0u;
  cc_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ParticleConfig::~ParticleConfig() {
  // @@protoc_insertion_point(destructor:protocol.effect.particle.ParticleConfig)
  SharedDtor();
}

void ParticleConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ParticleConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParticleConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ParticleConfig_descriptor_;
}

const ParticleConfig& ParticleConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_effect_5fsettings_5fparticle_2eproto();
  return *default_instance_;
}

ParticleConfig* ParticleConfig::default_instance_ = NULL;

ParticleConfig* ParticleConfig::New() const {
  return new ParticleConfig;
}

void ParticleConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ParticleConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(num_particles_, cc_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  bb_col3f_.Clear();
  bb_col4f_.Clear();
  bb_dir3f_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ParticleConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.effect.particle.ParticleConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 num_particles = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_particles_)));
          set_has_num_particles();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_bb_col3f;
        break;
      }

      // repeated float bb_col3f = 3;
      case 3: {
        if (tag == 29) {
         parse_bb_col3f:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 29, input, this->mutable_bb_col3f())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_bb_col3f())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_bb_col3f;
        if (input->ExpectTag(37)) goto parse_bb_col4f;
        break;
      }

      // repeated float bb_col4f = 4;
      case 4: {
        if (tag == 37) {
         parse_bb_col4f:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 37, input, this->mutable_bb_col4f())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_bb_col4f())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_bb_col4f;
        if (input->ExpectTag(45)) goto parse_bb_dir3f;
        break;
      }

      // repeated float bb_dir3f = 5;
      case 5: {
        if (tag == 45) {
         parse_bb_dir3f:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 45, input, this->mutable_bb_dir3f())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_bb_dir3f())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_bb_dir3f;
        if (input->ExpectTag(48)) goto parse_cc;
        break;
      }

      // optional bool cc = 6;
      case 6: {
        if (tag == 48) {
         parse_cc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cc_)));
          set_has_cc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.effect.particle.ParticleConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.effect.particle.ParticleConfig)
  return false;
#undef DO_
}

void ParticleConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.effect.particle.ParticleConfig)
  // optional uint32 num_particles = 1;
  if (has_num_particles()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num_particles(), output);
  }

  // repeated float bb_col3f = 3;
  for (int i = 0; i < this->bb_col3f_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      3, this->bb_col3f(i), output);
  }

  // repeated float bb_col4f = 4;
  for (int i = 0; i < this->bb_col4f_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      4, this->bb_col4f(i), output);
  }

  // repeated float bb_dir3f = 5;
  for (int i = 0; i < this->bb_dir3f_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      5, this->bb_dir3f(i), output);
  }

  // optional bool cc = 6;
  if (has_cc()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->cc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.effect.particle.ParticleConfig)
}

::google::protobuf::uint8* ParticleConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.effect.particle.ParticleConfig)
  // optional uint32 num_particles = 1;
  if (has_num_particles()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num_particles(), target);
  }

  // repeated float bb_col3f = 3;
  for (int i = 0; i < this->bb_col3f_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(3, this->bb_col3f(i), target);
  }

  // repeated float bb_col4f = 4;
  for (int i = 0; i < this->bb_col4f_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(4, this->bb_col4f(i), target);
  }

  // repeated float bb_dir3f = 5;
  for (int i = 0; i < this->bb_dir3f_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(5, this->bb_dir3f(i), target);
  }

  // optional bool cc = 6;
  if (has_cc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->cc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.effect.particle.ParticleConfig)
  return target;
}

int ParticleConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 num_particles = 1;
    if (has_num_particles()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_particles());
    }

    // optional bool cc = 6;
    if (has_cc()) {
      total_size += 1 + 1;
    }

  }
  // repeated float bb_col3f = 3;
  {
    int data_size = 0;
    data_size = 4 * this->bb_col3f_size();
    total_size += 1 * this->bb_col3f_size() + data_size;
  }

  // repeated float bb_col4f = 4;
  {
    int data_size = 0;
    data_size = 4 * this->bb_col4f_size();
    total_size += 1 * this->bb_col4f_size() + data_size;
  }

  // repeated float bb_dir3f = 5;
  {
    int data_size = 0;
    data_size = 4 * this->bb_dir3f_size();
    total_size += 1 * this->bb_dir3f_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParticleConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ParticleConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ParticleConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ParticleConfig::MergeFrom(const ParticleConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  bb_col3f_.MergeFrom(from.bb_col3f_);
  bb_col4f_.MergeFrom(from.bb_col4f_);
  bb_dir3f_.MergeFrom(from.bb_dir3f_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num_particles()) {
      set_num_particles(from.num_particles());
    }
    if (from.has_cc()) {
      set_cc(from.cc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ParticleConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParticleConfig::CopyFrom(const ParticleConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParticleConfig::IsInitialized() const {

  return true;
}

void ParticleConfig::Swap(ParticleConfig* other) {
  if (other != this) {
    std::swap(num_particles_, other->num_particles_);
    bb_col3f_.Swap(&other->bb_col3f_);
    bb_col4f_.Swap(&other->bb_col4f_);
    bb_dir3f_.Swap(&other->bb_dir3f_);
    std::swap(cc_, other->cc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ParticleConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ParticleConfig_descriptor_;
  metadata.reflection = ParticleConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace particle
}  // namespace effect
}  // namespace protocol

// @@protoc_insertion_point(global_scope)
