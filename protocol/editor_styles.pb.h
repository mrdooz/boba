// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: editor_styles.proto

#ifndef PROTOBUF_editor_5fstyles_2eproto__INCLUDED
#define PROTOBUF_editor_5fstyles_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "editor_settings.pb.h"
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace protocol {
namespace editor {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_editor_5fstyles_2eproto();
void protobuf_AssignDesc_editor_5fstyles_2eproto();
void protobuf_ShutdownFile_editor_5fstyles_2eproto();

class StyleSetting;
class StyleSettings;

// ===================================================================

class StyleSetting : public ::google::protobuf::Message {
 public:
  StyleSetting();
  virtual ~StyleSetting();

  StyleSetting(const StyleSetting& from);

  inline StyleSetting& operator=(const StyleSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StyleSetting& default_instance();

  void Swap(StyleSetting* other);

  // implements Message ----------------------------------------------

  StyleSetting* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StyleSetting& from);
  void MergeFrom(const StyleSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // optional .protocol.common.Color4 fill_color = 2;
  inline bool has_fill_color() const;
  inline void clear_fill_color();
  static const int kFillColorFieldNumber = 2;
  inline const ::protocol::common::Color4& fill_color() const;
  inline ::protocol::common::Color4* mutable_fill_color();
  inline ::protocol::common::Color4* release_fill_color();
  inline void set_allocated_fill_color(::protocol::common::Color4* fill_color);

  // optional .protocol.common.Color4 outline_color = 3;
  inline bool has_outline_color() const;
  inline void clear_outline_color();
  static const int kOutlineColorFieldNumber = 3;
  inline const ::protocol::common::Color4& outline_color() const;
  inline ::protocol::common::Color4* mutable_outline_color();
  inline ::protocol::common::Color4* release_outline_color();
  inline void set_allocated_outline_color(::protocol::common::Color4* outline_color);

  // optional float outline_thickness = 4 [default = 0];
  inline bool has_outline_thickness() const;
  inline void clear_outline_thickness();
  static const int kOutlineThicknessFieldNumber = 4;
  inline float outline_thickness() const;
  inline void set_outline_thickness(float value);

  // optional uint32 font_style = 5;
  inline bool has_font_style() const;
  inline void clear_font_style();
  static const int kFontStyleFieldNumber = 5;
  inline ::google::protobuf::uint32 font_style() const;
  inline void set_font_style(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.editor.StyleSetting)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_fill_color();
  inline void clear_has_fill_color();
  inline void set_has_outline_color();
  inline void clear_has_outline_color();
  inline void set_has_outline_thickness();
  inline void clear_has_outline_thickness();
  inline void set_has_font_style();
  inline void clear_has_font_style();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  ::protocol::common::Color4* fill_color_;
  ::protocol::common::Color4* outline_color_;
  float outline_thickness_;
  ::google::protobuf::uint32 font_style_;
  friend void  protobuf_AddDesc_editor_5fstyles_2eproto();
  friend void protobuf_AssignDesc_editor_5fstyles_2eproto();
  friend void protobuf_ShutdownFile_editor_5fstyles_2eproto();

  void InitAsDefaultInstance();
  static StyleSetting* default_instance_;
};
// -------------------------------------------------------------------

class StyleSettings : public ::google::protobuf::Message {
 public:
  StyleSettings();
  virtual ~StyleSettings();

  StyleSettings(const StyleSettings& from);

  inline StyleSettings& operator=(const StyleSettings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StyleSettings& default_instance();

  void Swap(StyleSettings* other);

  // implements Message ----------------------------------------------

  StyleSettings* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StyleSettings& from);
  void MergeFrom(const StyleSettings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.editor.StyleSetting style_setting = 1;
  inline int style_setting_size() const;
  inline void clear_style_setting();
  static const int kStyleSettingFieldNumber = 1;
  inline const ::protocol::editor::StyleSetting& style_setting(int index) const;
  inline ::protocol::editor::StyleSetting* mutable_style_setting(int index);
  inline ::protocol::editor::StyleSetting* add_style_setting();
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::editor::StyleSetting >&
      style_setting() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::editor::StyleSetting >*
      mutable_style_setting();

  // @@protoc_insertion_point(class_scope:protocol.editor.StyleSettings)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::editor::StyleSetting > style_setting_;
  friend void  protobuf_AddDesc_editor_5fstyles_2eproto();
  friend void protobuf_AssignDesc_editor_5fstyles_2eproto();
  friend void protobuf_ShutdownFile_editor_5fstyles_2eproto();

  void InitAsDefaultInstance();
  static StyleSettings* default_instance_;
};
// ===================================================================


// ===================================================================

// StyleSetting

// optional string id = 1;
inline bool StyleSetting::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StyleSetting::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StyleSetting::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StyleSetting::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& StyleSetting::id() const {
  // @@protoc_insertion_point(field_get:protocol.editor.StyleSetting.id)
  return *id_;
}
inline void StyleSetting::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:protocol.editor.StyleSetting.id)
}
inline void StyleSetting::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.editor.StyleSetting.id)
}
inline void StyleSetting::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.editor.StyleSetting.id)
}
inline ::std::string* StyleSetting::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:protocol.editor.StyleSetting.id)
  return id_;
}
inline ::std::string* StyleSetting::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StyleSetting::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.editor.StyleSetting.id)
}

// optional .protocol.common.Color4 fill_color = 2;
inline bool StyleSetting::has_fill_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StyleSetting::set_has_fill_color() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StyleSetting::clear_has_fill_color() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StyleSetting::clear_fill_color() {
  if (fill_color_ != NULL) fill_color_->::protocol::common::Color4::Clear();
  clear_has_fill_color();
}
inline const ::protocol::common::Color4& StyleSetting::fill_color() const {
  // @@protoc_insertion_point(field_get:protocol.editor.StyleSetting.fill_color)
  return fill_color_ != NULL ? *fill_color_ : *default_instance_->fill_color_;
}
inline ::protocol::common::Color4* StyleSetting::mutable_fill_color() {
  set_has_fill_color();
  if (fill_color_ == NULL) fill_color_ = new ::protocol::common::Color4;
  // @@protoc_insertion_point(field_mutable:protocol.editor.StyleSetting.fill_color)
  return fill_color_;
}
inline ::protocol::common::Color4* StyleSetting::release_fill_color() {
  clear_has_fill_color();
  ::protocol::common::Color4* temp = fill_color_;
  fill_color_ = NULL;
  return temp;
}
inline void StyleSetting::set_allocated_fill_color(::protocol::common::Color4* fill_color) {
  delete fill_color_;
  fill_color_ = fill_color;
  if (fill_color) {
    set_has_fill_color();
  } else {
    clear_has_fill_color();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.editor.StyleSetting.fill_color)
}

// optional .protocol.common.Color4 outline_color = 3;
inline bool StyleSetting::has_outline_color() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StyleSetting::set_has_outline_color() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StyleSetting::clear_has_outline_color() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StyleSetting::clear_outline_color() {
  if (outline_color_ != NULL) outline_color_->::protocol::common::Color4::Clear();
  clear_has_outline_color();
}
inline const ::protocol::common::Color4& StyleSetting::outline_color() const {
  // @@protoc_insertion_point(field_get:protocol.editor.StyleSetting.outline_color)
  return outline_color_ != NULL ? *outline_color_ : *default_instance_->outline_color_;
}
inline ::protocol::common::Color4* StyleSetting::mutable_outline_color() {
  set_has_outline_color();
  if (outline_color_ == NULL) outline_color_ = new ::protocol::common::Color4;
  // @@protoc_insertion_point(field_mutable:protocol.editor.StyleSetting.outline_color)
  return outline_color_;
}
inline ::protocol::common::Color4* StyleSetting::release_outline_color() {
  clear_has_outline_color();
  ::protocol::common::Color4* temp = outline_color_;
  outline_color_ = NULL;
  return temp;
}
inline void StyleSetting::set_allocated_outline_color(::protocol::common::Color4* outline_color) {
  delete outline_color_;
  outline_color_ = outline_color;
  if (outline_color) {
    set_has_outline_color();
  } else {
    clear_has_outline_color();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.editor.StyleSetting.outline_color)
}

// optional float outline_thickness = 4 [default = 0];
inline bool StyleSetting::has_outline_thickness() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StyleSetting::set_has_outline_thickness() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StyleSetting::clear_has_outline_thickness() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StyleSetting::clear_outline_thickness() {
  outline_thickness_ = 0;
  clear_has_outline_thickness();
}
inline float StyleSetting::outline_thickness() const {
  // @@protoc_insertion_point(field_get:protocol.editor.StyleSetting.outline_thickness)
  return outline_thickness_;
}
inline void StyleSetting::set_outline_thickness(float value) {
  set_has_outline_thickness();
  outline_thickness_ = value;
  // @@protoc_insertion_point(field_set:protocol.editor.StyleSetting.outline_thickness)
}

// optional uint32 font_style = 5;
inline bool StyleSetting::has_font_style() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StyleSetting::set_has_font_style() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StyleSetting::clear_has_font_style() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StyleSetting::clear_font_style() {
  font_style_ = 0u;
  clear_has_font_style();
}
inline ::google::protobuf::uint32 StyleSetting::font_style() const {
  // @@protoc_insertion_point(field_get:protocol.editor.StyleSetting.font_style)
  return font_style_;
}
inline void StyleSetting::set_font_style(::google::protobuf::uint32 value) {
  set_has_font_style();
  font_style_ = value;
  // @@protoc_insertion_point(field_set:protocol.editor.StyleSetting.font_style)
}

// -------------------------------------------------------------------

// StyleSettings

// repeated .protocol.editor.StyleSetting style_setting = 1;
inline int StyleSettings::style_setting_size() const {
  return style_setting_.size();
}
inline void StyleSettings::clear_style_setting() {
  style_setting_.Clear();
}
inline const ::protocol::editor::StyleSetting& StyleSettings::style_setting(int index) const {
  // @@protoc_insertion_point(field_get:protocol.editor.StyleSettings.style_setting)
  return style_setting_.Get(index);
}
inline ::protocol::editor::StyleSetting* StyleSettings::mutable_style_setting(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.editor.StyleSettings.style_setting)
  return style_setting_.Mutable(index);
}
inline ::protocol::editor::StyleSetting* StyleSettings::add_style_setting() {
  // @@protoc_insertion_point(field_add:protocol.editor.StyleSettings.style_setting)
  return style_setting_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::editor::StyleSetting >&
StyleSettings::style_setting() const {
  // @@protoc_insertion_point(field_list:protocol.editor.StyleSettings.style_setting)
  return style_setting_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::editor::StyleSetting >*
StyleSettings::mutable_style_setting() {
  // @@protoc_insertion_point(field_mutable_list:protocol.editor.StyleSettings.style_setting)
  return &style_setting_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace editor
}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_editor_5fstyles_2eproto__INCLUDED
